	Java Fullstack
	
	
	
	java developer
	database developer
	frontend develoeper
	
	
	
	corejava			case study-1
	database(mysql)
	JDBC
	JPA	with hibernate	case study-2
	SPring 
	Springboot			case study-3
	
	html
	css
	js
	bs
	ts
	angular				case study-4
	
	
	
	CoreJava:
	============
	
	language:
	===========
	
		communication with human
		
	Programming Language:
========================	
	
		communication with machine
	
		software
	
	java ,python,c,c#,.net,....
	
	
	POP 							OOP
B,BCPL,C,COBOL,PASCAL,PHOTON	java,python,.net,c++...
	
	
			1)Performance		inheritance,polymorphisam
			2)Security			abstraction,encapsulation
			
			
													oracle corporation
			
			Why JAVA?		1996					sun micro system-->james gosling
			
			java 1.8/8
										21
	
				1)platform independent  WORA
				2)garbage collection		garbage collector 
					
	
			netflix->mobile,laptop,tv,tab....
	
	
	
	
		.net-->platform dependent  microsoft
	
	
	
	machine1 		java app
	windows11		.net app
	
	
	
	machine2   	machine3
 	mac 			linux
	
	
	JAVA :
		.html,.css,.py, .java 
		
		
		java -->download 
		
		
		C:\Program Files\Java\jdk1.8.0_281\bin
		
		
		https://www.javatpoint.com/javafx-how-to-install-java

C:\Users\SANDEEP>java -version
java version "1.8.0_281"
Java(TM) SE Runtime Environment (build 1.8.0_281-b09)
Java HotSpot(TM) 64-Bit Server VM (build 25.281-b09, mixed mode)

C:\Users\SANDEEP>javac -version
javac 1.8.0_281		
	
	
	
	welcome to java 
	
	
	
	
Welcome.java //source code  JDK-->JRE-->JVM
	
	
	
	alphabets -->26
	
	
	java keywords --->53-->lower case 
	
						33
	
	
	execute
	
	 jdk-->jre-->JVM-->0's 1's binary /byte 
	
	
	translators-->translation
	
	compiler------->byte code -->compailation
	.java			.class
	
	javac filename.java		--->compiler---> .class
	
	java classname			-->JVM--->
	
	JVM-->main 
	
	java classname
	
	
Identifiers:
============	
	
 any name in java will call it as identifier
	
		classname,var name,method name,interface name,objname...
	
			class Welcome@123
			{
			
			
			}
	
		a-z
		A-Z
		0-9
		_ 
		$
	
Variables:
==========	
	
	variable is name given to memory location
	
	
		sandeep_trainer 94949499494
	
		local variables
		global variables -->insntance and static 
	syntax:
			
		datatype varname=value
	
	
		name,id,aadhar,pan,mobile,salary,m/f,....
	
	
					PDT 			NPDT
					8 pdt		String,array.....
														contactnum
				byte	1 byte		-128 to 127
				short	2 bytes		-32768 to 32767
				int		4 bytes		-2147483648 to 2147483647
		0		long	8 bytes		-(2 power 63) to (2 power 63)-1
																	byte age =31;-->1 byte
				float	4 bytes			decimal places
				double	8 bytes			23.34258234292374
				
				boolean 1 bit  true-1,false-0
				char	2 bytes			'M'
	
	
	
	
		c-->ASCII-->english
		java-->UNICODE->english,18  0--65536
			
	
	Instance and static 
	===================
1)Syntax

	-->to define static properties we have to use static keyword
	-->if there is no static keyword i.e instance 


2)Memory
	-->static properties will get memory only once at the time of class loading into jvm   javac filename.java--->java classname
	-->instance properties will get memory at the time object creation
	
				class :its a collection of data members and member functions
				object :instance(memory) of a class 
				
					syntax
					A		classname objname=new classname();
								A obj=new A();-->memory created for instance properties
3)Access

			instance properties can be accessed by using objname 
			static properties can be accessed by using classname 

4)Usage	
	
		if it is common property will go for static 
				
					countrycode,countryname,schoolname,orgname,college name
					
		if it is unique data will go for instance
	
					eid,aadhar,pan,contact
	
package,import

	
package:
========
	folder
	
	package 
		group realted classes

		Scanner -->packages 	import java.util.Scanner
		
		2 types
		
			1.predefined  java.lang
			2.user defined 
	
Eclipse	
	
	
	NOTE:
		BY DEFAULT PACKAGE AVAILABLE FOR EVERY JAVA FILE JAVA.LANG
	
	
	import packagname
	
	import java.util.Date;
	
	
	
	package 
	
	eclipse :IDE
	
	eclipse,netbeans,intellji,vscode,sts.....
	
	
				compiler		
	
	java filename.java--->.class--->jvm--->output
	
			compailation			execution
	
	
	JVM Architecture:
	
			java classname 
			
					CLSS(class loader sub sytem)
					
					Memory areas	5 memory area
					
					execution engine gc,jit,interpreter
	
	class Test
	{
	int age=31;	//instance-->how much->4 bytes-->when--? --->where?--->
	static int countryCode=01;-->how much-->4 -->when-->?---->where?
		public static void main(String args[]){
			char gender='M';		where?
			Test test=new Test();//all instance properties will get memory
			
		}
	}
	instance 
	
	methodarea   heaparea  stackarea
	
	
	
	
	Variables:
	
	
		sandeeptrainer=949494949
	
	
		datatype varname=value
	
	
		2types
			local 
			global -->instance static
	
Methods:
=========	
	2 types  code reusability
	
	public static void main(String[] args) 
	
	syntax:
	
	
	accessmodifier static/instance returntype methodname(dt param1, dt param2 ....)
	{
	
	
	}
	
	
	
	public static void main(String[] args)    int name=sandeep    String name="123";
	
	
	array:group of values 
	
		similar values
		fixed in size
		
		int a=123;
		
		
		int a1[]={123,124,125,1255,223}-->index -->0
		
		sop(a1[1])
		
		float a1[]={123.2f,12.2f}
		
class Welcome  //PascalCase
{	
	//global variables -->instance,static
	boolean result=true;
	char gender='m';
	public static void main(String args[])//javac filname.java 	java classname 
	{
		int id=123;
			id=124;
			
		System.out.println(id);//124	
	
			//array
		int ids[]={12,32,44,15,65,88,66};

			System.out.println(ids[2]);//124	

		for(int i=0;i<ids.length;i++)
		{	
			System.out.println(ids[i]);//124	
		}
		System.out.println("**********************");//124
		
		for(int result:ids)
		{
			System.out.println(result);//124	
		}
		

	}
	
}  		
		
	OOPS	
		
			1)Performance		inheritance,polymorphisam
			2)Security			abstraction,encapsulation
		
		
		
		
	INHERITANCE:
=================	
		
		its a process aquiring the features/properties from parent to child
		
		CODE REUSABILITY
		
						extends ,implements
		class Test
		{
		10 variables
		30 methods
		}
		
		class Sample extends Test
		{
		20 variables
		20 methods 
		
		
		}
	
	NOTE: 
	By default package for every java file is  java.lang
	By default parent class for every java class is  java.lang.Object
	
	
	
	MI is not supported by java through classes
	MI is  supported by java through interface
	
	
	methods:
	
		
	
	accessmodifier static/instance returntype methodname(dt param1, dt param2 ....)
	{
	
	
	}
	
	method with body/logic/implementation concrete method
	
	method with out body/logic/implementation abstract method
	
	
	public void m1()//concrete method
	{
	
	}
	
	public abstract void m2();//abstract method
	
	
	
		Abstraction is a process of hiding internal details by showcasing the functionality.
			
			Abstract class 0-100%
			interface		100%
	
	
	atm screen
		
			withdraw
			
			deposit
			
			pin change
			
			mini statement
	
	
	
	class 					its collection of only concrete methods
	abstract class			its combination of both concrete and abstract methods
	interface				its collection of only abstract methods
	
	
	
		by default interface methods are public abstract
		by default interface variables are public static final
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	